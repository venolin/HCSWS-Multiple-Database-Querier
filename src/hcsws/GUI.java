/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hcsws;

import java.io.File;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;

/**
 *
 * @author snaude
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dbDirLbl = new javax.swing.JLabel();
        dbDirTxt = new javax.swing.JTextField();
        browseDirBtn = new javax.swing.JButton();
        queryLbl = new javax.swing.JLabel();
        queryScrollPane = new javax.swing.JScrollPane();
        queryText = new javax.swing.JTextArea();
        queryBtn = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        outputTxt = new javax.swing.JTextArea();
        saveBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Multiple Database Querier");
        setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        setIconImage(new ImageIcon(this.getClass().getResource("find_data.png")).getImage());

        dbDirLbl.setText("Database Directory:");

        dbDirTxt.setEditable(false);
        dbDirTxt.setText("D:/data/headcount/");

        browseDirBtn.setMnemonic('B');
        browseDirBtn.setText("Browse");
        browseDirBtn.setToolTipText("Browse for a directory");
        browseDirBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseDirBtnActionPerformed(evt);
            }
        });

        queryLbl.setText("SQL Query:");

        queryText.setColumns(20);
        queryText.setRows(5);
        queryText.setText("SELECT SiteName as [Site], TimeZone, \n\t(SELECT COUNT(*)  FROM Groups WHERE GroupType = 1) AS [EntranceCounters], \n\t(SELECT COUNT(*) FROM Groups WHERE GroupType=0) AS [FlowCounters] \nFROM SiteInfo");
        queryText.setToolTipText("Write your SQL Query here");
        queryText.setWrapStyleWord(true);
        queryScrollPane.setViewportView(queryText);

        queryBtn.setMnemonic('R');
        queryBtn.setText("Run");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("CSV Output"));

        outputTxt.setColumns(20);
        outputTxt.setRows(5);
        jScrollPane1.setViewportView(outputTxt);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 325, Short.MAX_VALUE)
                .addContainerGap())
        );

        saveBtn.setMnemonic('S');
        saveBtn.setText("Save");
        saveBtn.setToolTipText("Save output to file");
        saveBtn.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dbDirLbl)
                            .addComponent(queryLbl))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(queryScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 517, Short.MAX_VALUE)
                            .addComponent(dbDirTxt))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(browseDirBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(queryBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(saveBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dbDirLbl)
                    .addComponent(dbDirTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(browseDirBtn))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(queryLbl)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(queryBtn)
                        .addGap(18, 18, 18)
                        .addComponent(saveBtn))
                    .addComponent(queryScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void browseDirBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseDirBtnActionPerformed
        // Open a directory browser dialog to find a directory
        JFileChooser chooseDir = new JFileChooser();
        File serverData = new File("D:\\data\\");
        File localData = new File("C:\\NortechSystems\\data\\");
        if (serverData.exists() && serverData.isDirectory()) chooseDir.setCurrentDirectory(serverData);
        else if (localData.exists() && localData.isDirectory()) chooseDir.setCurrentDirectory(localData);
        chooseDir.setDialogTitle("Choose Directory");
        chooseDir.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int response = chooseDir.showOpenDialog(this);
        if (response == JFileChooser.APPROVE_OPTION) {
            File f = chooseDir.getSelectedFile();
            if (null != f && f.isDirectory()) { 
                String path = f.getAbsolutePath();
                this.dbDirTxt.setText((path.endsWith(File.separator)? path : path + File.separator)); 
                System.out.println("Database directory set to " + (path.endsWith(File.separator)? path : path + File.separator));
            }
            else System.err.println("Chosen path is not a directory!");
        } else System.err.println("No directory chosen.");
        
        
        
    }//GEN-LAST:event_browseDirBtnActionPerformed

    /**
     * 
     */
    public void performSetup(String lookAndFeelName) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if (lookAndFeelName.equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    SwingUtilities.updateComponentTreeUI(this.getRootPane().getTopLevelAncestor());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            System.err.println("Error setting Nimbus Theme: " + ex.getMessage());
        }
        //</editor-fold>
        
        //</editor-fold>
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton browseDirBtn;
    private javax.swing.JLabel dbDirLbl;
    private javax.swing.JTextField dbDirTxt;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea outputTxt;
    private javax.swing.JButton queryBtn;
    private javax.swing.JLabel queryLbl;
    private javax.swing.JScrollPane queryScrollPane;
    private javax.swing.JTextArea queryText;
    private javax.swing.JButton saveBtn;
    // End of variables declaration//GEN-END:variables
}
