# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file './GUI.ui'
#
# Created by: PyQt5 UI code generator 5.6
#
# WARNING! All changes made in this file will be lost!

from PySide import QtCore, QtGui
from PySide.QtGui import QTableWidget as QtWidgets

class Ui_MunninWindow(object):
    def setupUi(self, MunninWindow):
        MunninWindow.setObjectName("MunninWindow")
        MunninWindow.resize(940, 830)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MunninWindow.sizePolicy().hasHeightForWidth())
        MunninWindow.setSizePolicy(sizePolicy)
        MunninWindow.setMinimumSize(QtCore.QSize(940, 830))
        MunninWindow.setMaximumSize(QtCore.QSize(940, 830))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(9)
        MunninWindow.setFont(font)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("images/raven_guard_badge.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MunninWindow.setWindowIcon(icon)
        MunninWindow.setIconSize(QtCore.QSize(44, 44))
        MunninWindow.setToolButtonStyle(QtCore.Qt.ToolButtonTextOnly)
        self.centralwidget = QtWidgets.QWidget(MunninWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.DBDirGroupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.DBDirGroupBox.setGeometry(QtCore.QRect(10, 10, 591, 81))
        self.DBDirGroupBox.setObjectName("DBDirGroupBox")
        self.SubtractLocBtn = QtWidgets.QPushButton(self.DBDirGroupBox)
        self.SubtractLocBtn.setGeometry(QtCore.QRect(545, 30, 32, 32))
        self.SubtractLocBtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SubtractLocBtn.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("images/Oxygen-list-remove.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.SubtractLocBtn.setIcon(icon1)
        self.SubtractLocBtn.setIconSize(QtCore.QSize(25, 25))
        self.SubtractLocBtn.setObjectName("SubtractLocBtn")
        self.AddLocBtn = QtWidgets.QPushButton(self.DBDirGroupBox)
        self.AddLocBtn.setGeometry(QtCore.QRect(505, 30, 32, 32))
        self.AddLocBtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddLocBtn.setText("")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("images/Oxygen-list-add.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.AddLocBtn.setIcon(icon2)
        self.AddLocBtn.setIconSize(QtCore.QSize(25, 25))
        self.AddLocBtn.setObjectName("AddLocBtn")
        self.ChooseDirBtn = QtWidgets.QPushButton(self.DBDirGroupBox)
        self.ChooseDirBtn.setGeometry(QtCore.QRect(465, 30, 32, 32))
        self.ChooseDirBtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ChooseDirBtn.setText("")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("images/Iconsmind-Outline-Folder-Open.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.ChooseDirBtn.setIcon(icon3)
        self.ChooseDirBtn.setIconSize(QtCore.QSize(25, 25))
        self.ChooseDirBtn.setObjectName("ChooseDirBtn")
        self.DBDirComboBox = QtWidgets.QComboBox(self.DBDirGroupBox)
        self.DBDirComboBox.setGeometry(QtCore.QRect(15, 30, 440, 32))
        self.DBDirComboBox.setEditable(True)
        self.DBDirComboBox.setObjectName("DBDirComboBox")
        self.DBDirComboBox.addItem("")
        self.DBDirComboBox.addItem("")
        self.DBDirComboBox.addItem("")
        self.DBsGroupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.DBsGroupBox.setGeometry(QtCore.QRect(615, 10, 310, 80))
        self.DBsGroupBox.setObjectName("DBsGroupBox")
        self.RefreshDBsBtn = QtWidgets.QPushButton(self.DBsGroupBox)
        self.RefreshDBsBtn.setGeometry(QtCore.QRect(265, 30, 32, 32))
        self.RefreshDBsBtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.RefreshDBsBtn.setText("")
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("images/Oxygen-view-refresh.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.RefreshDBsBtn.setIcon(icon4)
        self.RefreshDBsBtn.setIconSize(QtCore.QSize(25, 25))
        self.RefreshDBsBtn.setObjectName("RefreshDBsBtn")
        self.UseCubesCRadio = QtWidgets.QRadioButton(self.DBsGroupBox)
        self.UseCubesCRadio.setGeometry(QtCore.QRect(20, 30, 100, 32))
        self.UseCubesCRadio.setCursor(QtGui.QCursor(QtCore.Qt.CrossCursor))
        self.UseCubesCRadio.setObjectName("UseCubesCRadio")
        self.UseCubesMRadio = QtWidgets.QRadioButton(self.DBsGroupBox)
        self.UseCubesMRadio.setGeometry(QtCore.QRect(130, 30, 120, 32))
        self.UseCubesMRadio.setCursor(QtGui.QCursor(QtCore.Qt.CrossCursor))
        self.UseCubesMRadio.setChecked(True)
        self.UseCubesMRadio.setObjectName("UseCubesMRadio")
        self.QueryGroupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.QueryGroupBox.setGeometry(QtCore.QRect(10, 100, 915, 265))
        self.QueryGroupBox.setObjectName("QueryGroupBox")
        self.TableLabel = QtWidgets.QLabel(self.QueryGroupBox)
        self.TableLabel.setGeometry(QtCore.QRect(10, 30, 50, 31))
        self.TableLabel.setTextFormat(QtCore.Qt.PlainText)
        self.TableLabel.setObjectName("TableLabel")
        self.TableListWidget = QtWidgets.QListWidget(self.QueryGroupBox)
        self.TableListWidget.setGeometry(QtCore.QRect(10, 65, 120, 185))
        self.TableListWidget.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.CrossCursor))
        self.TableListWidget.setAlternatingRowColors(True)
        self.TableListWidget.setSelectionRectVisible(True)
        self.TableListWidget.setObjectName("TableListWidget")
        self.ColumnLabel = QtWidgets.QLabel(self.QueryGroupBox)
        self.ColumnLabel.setGeometry(QtCore.QRect(140, 30, 51, 31))
        self.ColumnLabel.setCursor(QtGui.QCursor(QtCore.Qt.CrossCursor))
        self.ColumnLabel.setToolTip("")
        self.ColumnLabel.setTextFormat(QtCore.Qt.PlainText)
        self.ColumnLabel.setObjectName("ColumnLabel")
        self.ColumnsListWidget = QtWidgets.QListWidget(self.QueryGroupBox)
        self.ColumnsListWidget.setGeometry(QtCore.QRect(140, 65, 140, 185))
        self.ColumnsListWidget.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.CrossCursor))
        self.ColumnsListWidget.setAlternatingRowColors(True)
        self.ColumnsListWidget.setSelectionMode(QtWidgets.QAbstractItemView.MultiSelection)
        self.ColumnsListWidget.setSelectionRectVisible(True)
        self.ColumnsListWidget.setObjectName("ColumnsListWidget")
        self.PushSelectionBtn = QtWidgets.QPushButton(self.QueryGroupBox)
        self.PushSelectionBtn.setGeometry(QtCore.QRect(250, 25, 32, 32))
        self.PushSelectionBtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.PushSelectionBtn.setText("")
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap("images/Oxygen-arrow-right.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.PushSelectionBtn.setIcon(icon5)
        self.PushSelectionBtn.setIconSize(QtCore.QSize(25, 25))
        self.PushSelectionBtn.setObjectName("PushSelectionBtn")
        self.QueryTextEdit = QtWidgets.QPlainTextEdit(self.QueryGroupBox)
        self.QueryTextEdit.setGeometry(QtCore.QRect(295, 25, 610, 185))
        font = QtGui.QFont()
        font.setFamily("DejaVu Sans Mono")
        font.setPointSize(9)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.QueryTextEdit.setFont(font)
        self.QueryTextEdit.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.IBeamCursor))
        self.QueryTextEdit.setLineWrapMode(QtWidgets.QPlainTextEdit.NoWrap)
        self.QueryTextEdit.setObjectName("QueryTextEdit")
        self.LoadScriptBtn = QtWidgets.QPushButton(self.QueryGroupBox)
        self.LoadScriptBtn.setGeometry(QtCore.QRect(295, 220, 32, 32))
        self.LoadScriptBtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.LoadScriptBtn.setText("")
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap("images/Oxygen-Actions-arrow-up.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.LoadScriptBtn.setIcon(icon6)
        self.LoadScriptBtn.setIconSize(QtCore.QSize(25, 25))
        self.LoadScriptBtn.setObjectName("LoadScriptBtn")
        self.StopExecBtn = QtWidgets.QPushButton(self.QueryGroupBox)
        self.StopExecBtn.setEnabled(False)
        self.StopExecBtn.setGeometry(QtCore.QRect(440, 220, 32, 32))
        self.StopExecBtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.StopExecBtn.setWhatsThis("")
        self.StopExecBtn.setText("")
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap("images/Oxygen-media-playback-stop.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.StopExecBtn.setIcon(icon7)
        self.StopExecBtn.setIconSize(QtCore.QSize(25, 25))
        self.StopExecBtn.setObjectName("StopExecBtn")
        self.TableAliasLineEdit = QtWidgets.QLineEdit(self.QueryGroupBox)
        self.TableAliasLineEdit.setGeometry(QtCore.QRect(70, 25, 60, 30))
        font = QtGui.QFont()
        font.setFamily("DejaVu Sans Mono")
        self.TableAliasLineEdit.setFont(font)
        self.TableAliasLineEdit.setMaxLength(5)
        self.TableAliasLineEdit.setClearButtonEnabled(False)
        self.TableAliasLineEdit.setObjectName("TableAliasLineEdit")
        self.ExecuteBtn = QtWidgets.QPushButton(self.QueryGroupBox)
        self.ExecuteBtn.setGeometry(QtCore.QRect(390, 220, 32, 32))
        self.ExecuteBtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ExecuteBtn.setText("")
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap("images/Oxygen-media-playback-start.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.ExecuteBtn.setIcon(icon8)
        self.ExecuteBtn.setIconSize(QtCore.QSize(25, 25))
        self.ExecuteBtn.setObjectName("ExecuteBtn")
        self.TestQueryBtn = QtWidgets.QPushButton(self.QueryGroupBox)
        self.TestQueryBtn.setGeometry(QtCore.QRect(340, 220, 32, 32))
        self.TestQueryBtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.TestQueryBtn.setText("")
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap("images/Oxygen-dialog-ok-apply.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.TestQueryBtn.setIcon(icon9)
        self.TestQueryBtn.setIconSize(QtCore.QSize(25, 25))
        self.TestQueryBtn.setObjectName("TestQueryBtn")
        self.OutputTypeLabel = QtWidgets.QLabel(self.QueryGroupBox)
        self.OutputTypeLabel.setGeometry(QtCore.QRect(600, 220, 120, 32))
        self.OutputTypeLabel.setToolTip("")
        self.OutputTypeLabel.setTextFormat(QtCore.Qt.PlainText)
        self.OutputTypeLabel.setObjectName("OutputTypeLabel")
        self.CSVRadioBtn = QtWidgets.QRadioButton(self.QueryGroupBox)
        self.CSVRadioBtn.setGeometry(QtCore.QRect(730, 220, 55, 32))
        self.CSVRadioBtn.setCursor(QtGui.QCursor(QtCore.Qt.CrossCursor))
        self.CSVRadioBtn.setChecked(True)
        self.CSVRadioBtn.setObjectName("CSVRadioBtn")
        self.XLSRadioBtn = QtWidgets.QRadioButton(self.QueryGroupBox)
        self.XLSRadioBtn.setGeometry(QtCore.QRect(855, 220, 55, 32))
        self.XLSRadioBtn.setCursor(QtGui.QCursor(QtCore.Qt.CrossCursor))
        self.XLSRadioBtn.setChecked(False)
        self.XLSRadioBtn.setAutoExclusive(True)
        self.XLSRadioBtn.setObjectName("XLSRadioBtn")
        self.CSVSepComboBox = QtWidgets.QComboBox(self.QueryGroupBox)
        self.CSVSepComboBox.setGeometry(QtCore.QRect(790, 225, 50, 25))
        font = QtGui.QFont()
        font.setFamily("DejaVu Sans Mono")
        self.CSVSepComboBox.setFont(font)
        self.CSVSepComboBox.setMaxVisibleItems(5)
        self.CSVSepComboBox.setSizeAdjustPolicy(QtWidgets.QComboBox.AdjustToContentsOnFirstShow)
        self.CSVSepComboBox.setObjectName("CSVSepComboBox")
        self.CSVSepComboBox.addItem("")
        self.CSVSepComboBox.addItem("")
        self.CSVSepComboBox.addItem("")
        self.CSVSepComboBox.addItem("")
        self.SaveScriptBtn = QtWidgets.QPushButton(self.centralwidget)
        self.SaveScriptBtn.setGeometry(QtCore.QRect(500, 320, 32, 32))
        self.SaveScriptBtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SaveScriptBtn.setText("")
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap("images/Oxygen-doc-save.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.SaveScriptBtn.setIcon(icon10)
        self.SaveScriptBtn.setIconSize(QtCore.QSize(25, 25))
        self.SaveScriptBtn.setObjectName("SaveScriptBtn")
        self.SaveScriptAsBtn = QtWidgets.QPushButton(self.centralwidget)
        self.SaveScriptAsBtn.setGeometry(QtCore.QRect(550, 320, 32, 32))
        self.SaveScriptAsBtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SaveScriptAsBtn.setText("")
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap("images/Oxygen-document-save-as.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.SaveScriptAsBtn.setIcon(icon11)
        self.SaveScriptAsBtn.setIconSize(QtCore.QSize(25, 25))
        self.SaveScriptAsBtn.setObjectName("SaveScriptAsBtn")
        self.OutputGroupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.OutputGroupBox.setEnabled(False)
        self.OutputGroupBox.setGeometry(QtCore.QRect(10, 419, 915, 350))
        self.OutputGroupBox.setObjectName("OutputGroupBox")
        self.ResultsTableView = QtWidgets.QTableView(self.OutputGroupBox)
        self.ResultsTableView.setEnabled(False)
        self.ResultsTableView.setGeometry(QtCore.QRect(20, 30, 880, 301))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ResultsTableView.sizePolicy().hasHeightForWidth())
        self.ResultsTableView.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("DejaVu Sans Mono")
        self.ResultsTableView.setFont(font)
        self.ResultsTableView.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.CrossCursor))
        self.ResultsTableView.setAlternatingRowColors(True)
        self.ResultsTableView.setSortingEnabled(False)
        self.ResultsTableView.setObjectName("ResultsTableView")
        self.DBProgressLabel = QtWidgets.QLabel(self.centralwidget)
        self.DBProgressLabel.setEnabled(False)
        self.DBProgressLabel.setGeometry(QtCore.QRect(10, 380, 110, 30))
        self.DBProgressLabel.setTextFormat(QtCore.Qt.PlainText)
        self.DBProgressLabel.setObjectName("DBProgressLabel")
        self.CurrentDBLCDNum = QtWidgets.QLCDNumber(self.centralwidget)
        self.CurrentDBLCDNum.setEnabled(False)
        self.CurrentDBLCDNum.setGeometry(QtCore.QRect(115, 380, 75, 30))
        self.CurrentDBLCDNum.setCursor(QtGui.QCursor(QtCore.Qt.ForbiddenCursor))
        self.CurrentDBLCDNum.setAutoFillBackground(True)
        self.CurrentDBLCDNum.setMode(QtWidgets.QLCDNumber.Dec)
        self.CurrentDBLCDNum.setSegmentStyle(QtWidgets.QLCDNumber.Filled)
        self.CurrentDBLCDNum.setProperty("value", 0.0)
        self.CurrentDBLCDNum.setProperty("intValue", 0)
        self.CurrentDBLCDNum.setObjectName("CurrentDBLCDNum")
        self.DBOfLabel = QtWidgets.QLabel(self.centralwidget)
        self.DBOfLabel.setEnabled(False)
        self.DBOfLabel.setGeometry(QtCore.QRect(195, 380, 20, 30))
        self.DBOfLabel.setCursor(QtGui.QCursor(QtCore.Qt.ForbiddenCursor))
        self.DBOfLabel.setTextFormat(QtCore.Qt.PlainText)
        self.DBOfLabel.setObjectName("DBOfLabel")
        self.TotalDBsLCDNum = QtWidgets.QLCDNumber(self.centralwidget)
        self.TotalDBsLCDNum.setEnabled(False)
        self.TotalDBsLCDNum.setGeometry(QtCore.QRect(215, 380, 75, 30))
        self.TotalDBsLCDNum.setCursor(QtGui.QCursor(QtCore.Qt.ForbiddenCursor))
        self.TotalDBsLCDNum.setAutoFillBackground(True)
        self.TotalDBsLCDNum.setMode(QtWidgets.QLCDNumber.Dec)
        self.TotalDBsLCDNum.setSegmentStyle(QtWidgets.QLCDNumber.Filled)
        self.TotalDBsLCDNum.setProperty("intValue", 0)
        self.TotalDBsLCDNum.setObjectName("TotalDBsLCDNum")
        self.progressBar = QtWidgets.QProgressBar(self.centralwidget)
        self.progressBar.setEnabled(False)
        self.progressBar.setGeometry(QtCore.QRect(305, 380, 620, 30))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.progressBar.sizePolicy().hasHeightForWidth())
        self.progressBar.setSizePolicy(sizePolicy)
        self.progressBar.setCursor(QtGui.QCursor(QtCore.Qt.WaitCursor))
        self.progressBar.setStyleSheet("/* Windows Vista/7 Progress Bar */\n"
"QProgressBar:horizontal { border-width: 1px; border-color: #999; border-style: solid; border-radius: 3px; padding: 0px; padding-left: 1px; padding-right:1px; background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #e2e2e2, stop: 0.50 #dbdbdb , stop: 0.51 #d1d1d1, stop: 1 #fefefe); text-align: center; }\n"
"QProgressBar::chunk:horizontal { background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #bfd255, stop: 0.50 #8eb92a, stop: 0.51 #72aa00, stop: 1 #9ecb2d);   font-size: 10px; width:10px; }")
        self.progressBar.setProperty("value", 0)
        self.progressBar.setAlignment(QtCore.Qt.AlignCenter)
        self.progressBar.setInvertedAppearance(False)
        self.progressBar.setObjectName("progressBar")
        MunninWindow.setCentralWidget(self.centralwidget)
        self.MuninnMenuBar = QtWidgets.QMenuBar(MunninWindow)
        self.MuninnMenuBar.setGeometry(QtCore.QRect(0, 0, 940, 26))
        self.MuninnMenuBar.setObjectName("MuninnMenuBar")
        self.MunninnMenuFile = QtWidgets.QMenu(self.MuninnMenuBar)
        self.MunninnMenuFile.setObjectName("MunninnMenuFile")
        self.MuninnMenuDatabase = QtWidgets.QMenu(self.MuninnMenuBar)
        self.MuninnMenuDatabase.setObjectName("MuninnMenuDatabase")
        MunninWindow.setMenuBar(self.MuninnMenuBar)
        self.MuninnStatusBar = QtWidgets.QStatusBar(MunninWindow)
        self.MuninnStatusBar.setSizeGripEnabled(False)
        self.MuninnStatusBar.setObjectName("MuninnStatusBar")
        MunninWindow.setStatusBar(self.MuninnStatusBar)
        self.ActionExit = QtWidgets.QAction(MunninWindow)
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap("images/Oxygen-application-exit.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.ActionExit.setIcon(icon12)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(9)
        self.ActionExit.setFont(font)
        self.ActionExit.setObjectName("ActionExit")
        self.MunninnMenuFile.addAction(self.ActionExit)
        self.MuninnMenuBar.addAction(self.MunninnMenuFile.menuAction())
        self.MuninnMenuBar.addAction(self.MuninnMenuDatabase.menuAction())

        self.retranslateUi(MunninWindow)
        self.ActionExit.triggered.connect(MunninWindow.close)
        self.XLSRadioBtn.toggled['bool'].connect(self.CSVSepComboBox.setDisabled)
        QtCore.QMetaObject.connectSlotsByName(MunninWindow)
        MunninWindow.setTabOrder(self.DBDirComboBox, self.ChooseDirBtn)
        MunninWindow.setTabOrder(self.ChooseDirBtn, self.AddLocBtn)
        MunninWindow.setTabOrder(self.AddLocBtn, self.SubtractLocBtn)
        MunninWindow.setTabOrder(self.SubtractLocBtn, self.UseCubesCRadio)
        MunninWindow.setTabOrder(self.UseCubesCRadio, self.UseCubesMRadio)
        MunninWindow.setTabOrder(self.UseCubesMRadio, self.RefreshDBsBtn)
        MunninWindow.setTabOrder(self.RefreshDBsBtn, self.TableListWidget)
        MunninWindow.setTabOrder(self.TableListWidget, self.TableAliasLineEdit)
        MunninWindow.setTabOrder(self.TableAliasLineEdit, self.ColumnsListWidget)
        MunninWindow.setTabOrder(self.ColumnsListWidget, self.PushSelectionBtn)
        MunninWindow.setTabOrder(self.PushSelectionBtn, self.QueryTextEdit)
        MunninWindow.setTabOrder(self.QueryTextEdit, self.LoadScriptBtn)
        MunninWindow.setTabOrder(self.LoadScriptBtn, self.TestQueryBtn)
        MunninWindow.setTabOrder(self.TestQueryBtn, self.ExecuteBtn)
        MunninWindow.setTabOrder(self.ExecuteBtn, self.StopExecBtn)
        MunninWindow.setTabOrder(self.StopExecBtn, self.SaveScriptBtn)
        MunninWindow.setTabOrder(self.SaveScriptBtn, self.SaveScriptAsBtn)
        MunninWindow.setTabOrder(self.SaveScriptAsBtn, self.CSVRadioBtn)
        MunninWindow.setTabOrder(self.CSVRadioBtn, self.XLSRadioBtn)
        MunninWindow.setTabOrder(self.XLSRadioBtn, self.ResultsTableView)

    def retranslateUi(self, MunninWindow):
        _translate = QtCore.QCoreApplication.translate
        MunninWindow.setWindowTitle(_translate("MunninWindow", "Muninn — Multiple Database Querier"))
        self.DBDirGroupBox.setTitle(_translate("MunninWindow", "Database Directory"))
        self.SubtractLocBtn.setToolTip(_translate("MunninWindow", "Remove selected directory from saved list"))
        self.SubtractLocBtn.setShortcut(_translate("MunninWindow", "Alt+R"))
        self.AddLocBtn.setToolTip(_translate("MunninWindow", "Add selected directory to saved list"))
        self.AddLocBtn.setShortcut(_translate("MunninWindow", "Alt+A"))
        self.ChooseDirBtn.setToolTip(_translate("MunninWindow", "Choose database directory"))
        self.ChooseDirBtn.setShortcut(_translate("MunninWindow", "Alt+D"))
        self.DBDirComboBox.setToolTip(_translate("MunninWindow", "Choose a previously stored location"))
        self.DBDirComboBox.setItemText(0, _translate("MunninWindow", "C:/NortechSystems/Data/"))
        self.DBDirComboBox.setItemText(1, _translate("MunninWindow", "C:/share/dbs/"))
        self.DBDirComboBox.setItemText(2, _translate("MunninWindow", "D:/data/headcount/"))
        self.DBsGroupBox.setTitle(_translate("MunninWindow", "Database Type Options"))
        self.RefreshDBsBtn.setToolTip(_translate("MunninWindow", "Refresh DB List/Count"))
        self.RefreshDBsBtn.setShortcut(_translate("MunninWindow", "Alt+F5"))
        self.UseCubesCRadio.setToolTip(_translate("MunninWindow", "Use only the Cube DBs"))
        self.UseCubesCRadio.setText(_translate("MunninWindow", "Use &Cubes"))
        self.UseCubesCRadio.setShortcut(_translate("MunninWindow", "Alt+C"))
        self.UseCubesMRadio.setToolTip(_translate("MunninWindow", "Use only the Main DBs"))
        self.UseCubesMRadio.setText(_translate("MunninWindow", "Use &Main DBs"))
        self.UseCubesMRadio.setShortcut(_translate("MunninWindow", "Alt+M"))
        self.QueryGroupBox.setTitle(_translate("MunninWindow", "Query"))
        self.TableLabel.setText(_translate("MunninWindow", "Table:"))
        self.TableListWidget.setToolTip(_translate("MunninWindow", "Select a table to query"))
        self.TableListWidget.setStatusTip(_translate("MunninWindow", "Select a table to view its columns/fields."))
        self.TableListWidget.setWhatsThis(_translate("MunninWindow", "List of tables in DB"))
        self.TableListWidget.setSortingEnabled(True)
        self.ColumnLabel.setText(_translate("MunninWindow", "Fields:"))
        self.ColumnsListWidget.setToolTip(_translate("MunninWindow", "Select table columns to query"))
        self.ColumnsListWidget.setWhatsThis(_translate("MunninWindow", "List of columns in selected table"))
        self.ColumnsListWidget.setSortingEnabled(True)
        self.PushSelectionBtn.setToolTip(_translate("MunninWindow", "Push DB selections to query editor"))
        self.PushSelectionBtn.setShortcut(_translate("MunninWindow", "Alt+P"))
        self.QueryTextEdit.setToolTip(_translate("MunninWindow", "Type/Edit your query here."))
        self.QueryTextEdit.setWhatsThis(_translate("MunninWindow", "SQL Query Editor"))
        self.QueryTextEdit.setDocumentTitle(_translate("MunninWindow", "MultipleDBQuery"))
        self.QueryTextEdit.setPlaceholderText(_translate("MunninWindow", "SELECT `ts`, `inVal`, `OutVal` FROM `Data` WHERE `GroupID` = 1;"))
        self.LoadScriptBtn.setToolTip(_translate("MunninWindow", "Load SQL Script"))
        self.StopExecBtn.setToolTip(_translate("MunninWindow", "Stop Query Execution"))
        self.TableAliasLineEdit.setToolTip(_translate("MunninWindow", "Table Alias"))
        self.TableAliasLineEdit.setStatusTip(_translate("MunninWindow", "Provide an alias to use for the selected table"))
        self.TableAliasLineEdit.setPlaceholderText(_translate("MunninWindow", "TBLA1"))
        self.ExecuteBtn.setToolTip(_translate("MunninWindow", "Execute Query"))
        self.TestQueryBtn.setToolTip(_translate("MunninWindow", "Test query"))
        self.TestQueryBtn.setStatusTip(_translate("MunninWindow", "Test the query against the demo DB"))
        self.OutputTypeLabel.setStatusTip(_translate("MunninWindow", "Select the file type when saving results"))
        self.OutputTypeLabel.setText(_translate("MunninWindow", "Results File Type:"))
        self.CSVRadioBtn.setText(_translate("MunninWindow", "CS&V"))
        self.CSVRadioBtn.setShortcut(_translate("MunninWindow", "Alt+V"))
        self.XLSRadioBtn.setText(_translate("MunninWindow", "X&LS"))
        self.XLSRadioBtn.setShortcut(_translate("MunninWindow", "Shift+L"))
        self.CSVSepComboBox.setToolTip(_translate("MunninWindow", "Select CSV field separator"))
        self.CSVSepComboBox.setItemText(0, _translate("MunninWindow", ";"))
        self.CSVSepComboBox.setItemText(1, _translate("MunninWindow", ","))
        self.CSVSepComboBox.setItemText(2, _translate("MunninWindow", ":"))
        self.CSVSepComboBox.setItemText(3, _translate("MunninWindow", "/t"))
        self.SaveScriptBtn.setToolTip(_translate("MunninWindow", "Save SQL Script"))
        self.SaveScriptAsBtn.setToolTip(_translate("MunninWindow", "Save SQL Script As ..."))
        self.OutputGroupBox.setTitle(_translate("MunninWindow", "Results Output"))
        self.DBProgressLabel.setText(_translate("MunninWindow", "Processing DB"))
        self.CurrentDBLCDNum.setToolTip(_translate("MunninWindow", "Current DB"))
        self.DBOfLabel.setText(_translate("MunninWindow", "of"))
        self.TotalDBsLCDNum.setToolTip(_translate("MunninWindow", "Current DB"))
        self.progressBar.setToolTip(_translate("MunninWindow", "Current Progress"))
        self.MunninnMenuFile.setTitle(_translate("MunninWindow", "File"))
        self.MuninnMenuDatabase.setTitle(_translate("MunninWindow", "Database"))
        self.ActionExit.setText(_translate("MunninWindow", "E&xit"))
        self.ActionExit.setToolTip(_translate("MunninWindow", "Exit the application"))
        self.ActionExit.setShortcut(_translate("MunninWindow", "Alt+X"))

